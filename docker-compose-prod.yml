version: "3.8"

services:
  reverse-proxy:
    image: nginx:1.17.10
    container_name: reviewed_app_reverse_proxy
    depends_on:
        - cache
        - backend
        - frontend
        - db
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
  
  cache:
    container_name: reviewed_app_cache
    image: redis:7.2
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./cache/d–∞ta:/root/redis
    env_file:
      - ./env/.env.redis

  backend:
    container_name: reviewed_app_backend
    image: reviewed_app_backend
    build:
      context: ./backend
      dockerfile: Dockerfile-prod
    command: ["uvicorn", "src.__main__:app", "--port=8000", "--host=0.0.0.0", "--proxy-headers"]
    volumes:
      - ./backend/src:/app/src
      - ./backend/alembic:/app/alembic
    env_file:
      - ./env/.env.postgres
      - ./env/.env.redis
    depends_on:
      - cache
      - db

  frontend:
    container_name: reviewed_app_frontend
    image: reviewed_app_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile-prod
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/tailwind.config.cjs:/app/tailwind.config.cjs
    depends_on:
      - cache
      - backend

  db:
    container_name: reviewed_app_db
    image: postgres:15
    ports:
      - "5432:5432"
    env_file:
      - ./env/.env.postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  worker:
    container_name: reviewed_app_worker
    build:
      context: ./backend
      dockerfile: Dockerfile-prod
    command: ["celery", "-A", "src.worker.tasks", "worker"]
    env_file:
      - ./env/.env.postgres
      - ./env/.env.redis
    environment:
      REDIS_SERVER: redis://cache:6379
      C_FORCE_ROOT: "true"
    volumes:
      - ./worker/src:/celery_worker/src
    depends_on:
      - cache

volumes:
  pgdata:
